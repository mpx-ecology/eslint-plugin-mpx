(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{815:function(t,s,a){"use strict";a.r(s);var e=a(9),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"开发指南"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发指南"}},[t._v("#")]),t._v(" 开发指南")]),t._v(" "),s("p",[t._v("欢迎贡献。")]),t._v(" "),s("h2",{attrs:{id:"错误报告"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误报告"}},[t._v("#")]),t._v(" 🐛 错误报告")]),t._v(" "),s("p",[t._v("如果您认为在 ESLint 中发现了错误，请"),s("a",{attrs:{href:"https://github.com/mpx-ecology/eslint-plugin-mpx/issues/new?labels=&template=bug_report.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("创建一个新问题"),s("OutboundLink")],1),t._v("或 GitHub 上的拉取请求。")]),t._v(" "),s("p",[t._v("请提供尽可能多的详细信息，以帮助我们正确解决您的问题。 如果我们需要对问题进行分类并不断向人们询问更多细节，那就是实际解决问题的时间。 通过在您的问题中包含大量细节来帮助我们尽可能提高效率。")]),t._v(" "),s("h2",{attrs:{id:"提出新规则或规则变更"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提出新规则或规则变更"}},[t._v("#")]),t._v(" ✨ 提出新规则或规则变更")]),t._v(" "),s("p",[t._v("为了添加新规则或规则更改，您应该：")]),t._v(" "),s("ul",[s("li",[t._v("在 GitHub 上创建带有提议规则描述的问题")]),t._v(" "),s("li",[t._v("使用 "),s("a",{attrs:{href:"https://github.com/eslint/generator-eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("official yeoman generator"),s("OutboundLink")],1),t._v(" 生成新规则")]),t._v(" "),s("li",[t._v("运行"),s("code",[t._v("npm start")])]),t._v(" "),s("li",[t._v("编写测试场景和实现逻辑")]),t._v(" "),s("li",[t._v("在生成的 "),s("code",[t._v("docs")]),t._v(" 文件中描述规则")]),t._v(" "),s("li",[t._v("确保所有测试都通过")]),t._v(" "),s("li",[t._v("运行 "),s("code",[t._v("npm run lint")]),t._v(" 并修复所有错误")]),t._v(" "),s("li",[t._v("运行 "),s("code",[t._v("npm run update")]),t._v(" 以更新自述文件和推荐配置")]),t._v(" "),s("li",[t._v("在描述中创建 PR 和链接创建的问题")])]),t._v(" "),s("p",[t._v("我们很高兴看到潜在的贡献，所以不要犹豫。 如果您有任何建议、想法或问题，请随时添加新的 "),s("a",{attrs:{href:"https://github.com/mpx-ecology/eslint-plugin-mpx/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("issue"),s("OutboundLink")],1),t._v("，但首先请确保您的问题不重复之前的问题。")]),t._v(" "),s("h2",{attrs:{id:"编写规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写规则"}},[t._v("#")]),t._v(" 🔥 编写规则")]),t._v(" "),s("p",[t._v("在开始编写新规则之前，请阅读"),s("a",{attrs:{href:"https://eslint.org/docs/developer-guide/working-with-rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方 ESLint 指南"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("接下来，为了了解您要检查的代码的 AST 是什么样的，请使用 [astexplorer.net]。\n[astexplorer.net] 是检查 AST 的绝佳工具，暂未支持Mpx，仅可查看js相关")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://astexplorer.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("astexplorer.net"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("由于 Mpx 中的单个文件组件不是纯 JavaScript，我们不能使用默认解析器，我们不得不引入额外的一个："),s("code",[t._v("mpx-eslint-parser")]),t._v("，它生成增强的 AST，节点代表模板语法的特定部分，以及 "),s("code",[t._v("<script>")]),t._v(" 标签内的内容。")]),t._v(" "),s("p",[t._v("要了解有关生成的 AST 中某些节点的更多信息，请访问此处：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/estree/estree",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESTree 文档"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/mpx-ecology/mpx-eslint-parser/blob/master/docs/ast.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("mpx-eslint-parser AST 文档"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("code",[t._v("Mpx-eslint-parser")]),t._v(" 提供了一些有用的解析器服务，以帮助遍历生成的 AST 和访问模板的令牌：\n-"),s("code",[t._v("context.parserServices.defineTemplateBodyVisitor（访问者，scriptVisitor）")]),t._v("\n-"),s("code",[t._v("context.parserServices.getTemplateBodyTokenStore()")])]),t._v(" "),s("p",[t._v("查看 "),s("a",{attrs:{href:"https://github.com/mpx-ecology/eslint-plugin-mpx/blob/master/lib/rules/valid-wx-if.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("示例规则"),s("OutboundLink")],1),t._v(" 以更好地了解这些规则是如何工作的。")]),t._v(" "),s("p",[t._v("请注意，关于您将在测试中编写什么样的代码示例，您必须在“RuleTester”中相应地设置解析器（不过，您可以根据每个测试用例进行设置）。 "),s("a",{attrs:{href:"https://github.com/mpx-ecology/eslint-plugin-mpx/blob/master/tests/lib/rules/valid-wx-if.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("在此处查看示例"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("最佳的编写规则实践是基于TDD(Test Drived Develop)的开发模式")]),t._v(" "),s("ol",[s("li",[t._v("在tests/lib下写下你的测试文件")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" RuleTester "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eslint'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RuleTester\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" rule "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../../../lib/rules/test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tester "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuleTester")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parser")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mpx-eslint-parser'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("parserOptions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("ecmaVersion")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2015")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntester"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("valid")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test.mpx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("code")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'<template><view class="a"><input class="b"></input><view class="c"></view><view class="d"></view></view></template>\'')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("invalid")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filename")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test.mpx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("code")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<script>function a (){ this.b = 1 }<\/script>'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("errors")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wrong'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("在lib/rules下写规则的详细，并且在lib/index下导出")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" utils "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../utils'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'problem'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("docs")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test file'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("categories")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://mpx-ecology.github.io/eslint-plugin-mpx/rules/test.html'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fixable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("schema")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @param {RuleContext} context */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineTemplateBodyVisitor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @param {VDirective} node */")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"VElement[name='input'] ~ VElement\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MemberExpression > ThisExpression'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("通过npm run test进行调试")])]),t._v(" "),s("p",[t._v("如果您遇到困难，请记住您已经可以学习很多规则，如果您找不到正确的解决方案 - 请不要犹豫，提出issue解决问题。我们很乐意提供帮助！")]),t._v(" "),s("h2",{attrs:{id:"灵活匹配节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#灵活匹配节点"}},[t._v("#")]),t._v(" 🔍 灵活匹配节点")]),t._v(" "),s("p",[t._v("我们在编写规则的时候，想要匹配某个节点下的子节点或者兄弟节点，可以通过"),s("a",{attrs:{href:"https://github.com/estools/esquery",target:"_blank",rel:"noopener noreferrer"}},[t._v("esquery"),s("OutboundLink")],1),t._v("提供的方式来编写我们的visitor")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* \n<template>\n  <view class="a">\n    <input class="b"></input>\n    <view class="c"></view>\n    <view class="d"></view>\n  </view>\n</template>\n*/')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineTemplateBodyVisitor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配属性为class的节点")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"VAttribute[key.name='class']\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配属性为class值为a的节点")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"VAttribute[key.name='class'][value.value='a']\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配tempalte节点下属性有class的所有节点")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"VElement[name='template'] VAttribute[key.name='class'\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配tempalte节点的children节点为VElement类型的 (即为class=a的节点)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"VElement[name='template'] > VElement\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配input节点所有兄弟节点 (即为class=c的节点和class=d的节点)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"VElement[name='input'] ~ VElement\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配input节点下一个兄弟节点 (即为class=c的节点)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"VElement[name='input'] + VElement\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// js模块同理，这里不过多展示")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配function中表达式的this表达式")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MemberExpression > ThisExpression'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"内置工具函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内置工具函数"}},[t._v("#")]),t._v(" ⚡️ 内置工具函数")]),t._v(" "),s("h3",{attrs:{id:"visitor相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#visitor相关"}},[t._v("#")]),t._v(" visitor相关")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#defineTemplateBodyVisitor"}},[t._v("defineTemplateBodyVisitor")]),t._v(" (定义模版Visitor)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#wrapCoreRule"}},[t._v("wrapCoreRule")]),t._v(" (Eslint规则适配Template)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#executeOnMpx"}},[t._v("executeOnMpx")]),t._v(" (检测当前文件是否是mpx文件且是创建mpx方法)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#excuteOnMpxCreateApp"}},[t._v("excuteOnMpxCreateApp")]),t._v(" (检测是否是在createApp函数并且执行callback)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#excuteOnMpxCreateComponent"}},[t._v("excuteOnMpxCreateComponent")]),t._v(" (检测是否是在createComponent函数并且执行callback)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#excuteOnMpxCreatePage"}},[t._v("excuteOnMpxCreatePage")]),t._v(" (检测是否是在createPage函数并且执行callback)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#executeOnFunctionsWithoutReturn"}},[t._v("executeOnFunctionsWithoutReturn")]),t._v(" (查找所有没有返回值的函数)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#compositingVisitors"}},[t._v("compositingVisitors")]),t._v(" (合并Visitors)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#defineMpxVisitor"}},[t._v("defineMpxVisitor")]),t._v(" (定义处理程序以遍历 Mpx 对象)")])]),t._v(" "),s("h3",{attrs:{id:"获取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取"}},[t._v("#")]),t._v(" 获取")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#prevSibling"}},[t._v("prevSibling")]),t._v(" (获取给定元素的前一个兄弟元素)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#getAttribute"}},[t._v("getAttribute")]),t._v(" (获取具有给定名称的属性)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#getDirective"}},[t._v("getDirective")]),t._v(" (获取具有给定名称的指令)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#getDirectives"}},[t._v("getDirectives")]),t._v(" (获取具有给定名称的指令列表)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#getStaticPropertyName"}},[t._v("getStaticPropertyName")]),t._v(" (获取给定节点的属性名称)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#getStringLiteralValue"}},[t._v("getStringLiteralValue")]),t._v(" (获取给定节点的字符串)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#getComponentPropsFromOptions"}},[t._v("getComponentPropsFromOptions")]),t._v(" (通过查看所有组件的属性来获取所有道具)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#getComputedProperties"}},[t._v("getComputedProperties")]),t._v(" (通过查看所有组件的属性来获取所有计算属性)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#getMpxObjectType"}},[t._v("getMpxObjectType")]),t._v(" (如果是在创建mpx实例，则返回内部对象)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#*iterateProperties"}},[t._v("*iterateProperties")]),t._v(" (具有所有属性的返回generator)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#getMemberChaining"}},[t._v("getMemberChaining")]),t._v(" (获取 MemberExpression 的链接节点)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#findProperty"}},[t._v("findProperty")]),t._v(" (从给定的 ObjectExpression 节点中查找具有给定名称的属性)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#findMutating"}},[t._v("findMutating")]),t._v(" (检查给定节点是否有改变值的表达式)")])]),t._v(" "),s("h3",{attrs:{id:"检测"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#检测"}},[t._v("#")]),t._v(" 检测")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#isDef"}},[t._v("isDef")]),t._v(" (检查给定值是否已定义)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#hasAttribute"}},[t._v("hasAttribute")]),t._v(" (检查给定的开始标签是否有特定的属性)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#hasDirective"}},[t._v("hasDirective")]),t._v(" (检查给定的开始标签是否有特定的指令)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#isEmptyValueDirective"}},[t._v("isEmptyValueDirective")]),t._v(" (检查给定的指令属性是否具有空值("),s("code",[t._v('=""')]),t._v("))")]),t._v(" "),s("li",[s("a",{attrs:{href:"#isEmptyExpressionValueDirective"}},[t._v("isEmptyExpressionValueDirective")]),t._v(" (检查给定的指令属性是否有它们的空表达式值（例如"),s("code",[t._v('=""')]),t._v("))")]),t._v(" "),s("li",[s("a",{attrs:{href:"#prevElementHasIf"}},[t._v("prevElementHasIf")]),t._v(" (检查前一个兄弟元素是否有 "),s("code",[t._v("if")]),t._v(" 或 "),s("code",[t._v("elif")]),t._v(" 指令)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#isCustomComponent"}},[t._v("isCustomComponent")]),t._v(" (检查给定节点是否是自定义组件)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#isMpElementName"}},[t._v("isMpElementName")]),t._v(" (检查给定名称是否是小程序元素)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#isMpxFile"}},[t._v("isMpxFile")]),t._v(" (检测文件是不是.mpx后缀的文件)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#isSingleLine"}},[t._v("isSingleLine")]),t._v(" (检测是否在同一行)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#hasInvalidEOF"}},[t._v("hasInvalidEOF")]),t._v(" (检查程序的templateBody是否有无效的EOF)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#editDistance"}},[t._v("editDistance")]),t._v(" (返回两个字符串editdistanc)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#isProperty"}},[t._v("isProperty")]),t._v(" (检测节点是否为property节点)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#isVElement"}},[t._v("isVElement")]),t._v(" (检测节点是否为VElement节点)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#isThis"}},[t._v("isThis")]),t._v(" (检查给定节点是 "),s("code",[t._v("this")]),t._v(" 还是存储 "),s("code",[t._v("this")]),t._v(" 的变量)")]),t._v(" "),s("li",[s("a",{attrs:{href:"#equalTokens"}},[t._v("equalTokens")]),t._v(" (检查两个给定节点的令牌是否相同)")])]),t._v(" "),s("p",[s("a",{attrs:{id:"defineTemplateBodyVisitor"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"definetemplatebodyvisitor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#definetemplatebodyvisitor"}},[t._v("#")]),t._v(" defineTemplateBodyVisitor")]),t._v(" "),s("blockquote",[s("p",[t._v("定义模版Visitor,匹配template和js的节点进行规则处理")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* @param context 解析器的上下文\n * @param templateBodyVisitor 遍历模板的visitor.\n * @param [scriptVisitor] 遍历script的visitor.\n * @returns {RuleListener} 合并的visitor.\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineTemplateBodyVisitor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RuleContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("templateBodyVisitor")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" TemplateListener"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  scriptVisitor"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RuleListener")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RuleListener\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hasInvalidEOF "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineTemplateBodyVisitor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"VAttribute[directive=true][key.name.name='if']\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查程序的templateBody是否有无效的EOF，有的话不走了")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasInvalidEOF"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检测wx:if和wx:else是否在同一个标签")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" element "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parent\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasDirective")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'else'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("report")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loc")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"'wx:if' and 'wx:else' directives can't exist on the same element. You may want 'wx:elif' directives.\"")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Program'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      hasInvalidEOF "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasInvalidEOF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"wrapCoreRule"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"wrapcorerule"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wrapcorerule"}},[t._v("#")]),t._v(" wrapCoreRule")]),t._v(" "),s("blockquote",[s("p",[t._v("Eslint规则适配Template,可以让eslint规则检测tempalte中的表达式")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * @callback WrapCoreRuleCreate\n   * @param {RuleContext} ruleContext\n   * @param {WrapCoreRuleCreateContext} wrapContext\n   * @returns {TemplateListener}\n   *\n   * @typedef {object} WrapCoreRuleCreateContext\n   * @property {RuleListener} coreHandlers\n   */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * @callback WrapCoreRulePreprocess\n   * @param {RuleContext} ruleContext\n   * @param {WrapCoreRulePreprocessContext} wrapContext\n   * @returns {void}\n   *\n   * @typedef {object} WrapCoreRulePreprocessContext\n   * @property { (override: Partial<RuleContext>) => RuleContext } wrapContextToOverrideProperties 重写规则的context\n   * @property { (visitor: TemplateListener) => void } defineVisitor 定义template的Visitor\n   */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 让eslint core里的规则适用于mpx文件\n   * @param {string} coreRuleName core里的规则名字\n   * @param {Object} [options] 规则配置项\n   * @param {string[]} [options.categories] 规则的类别\n   * @param {boolean} [options.skipDynamicArguments] 如果为true，则跳过动态参数\n   * @param {boolean} [options.skipDynamicArgumentsReport] 如果“true”，则跳过动态参数中的报告。\n   * @param {WrapCoreRulePreprocess} [options.preprocess] 调用核心规则创建的预处理。\n   * @param {WrapCoreRuleCreate} [options.create] 如果定义，则扩展核心规则。\n   * @returns {RuleModule} 包装的规则实现。\n   */")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrapCoreRule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("coreRuleName")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RuleModule\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eslint-disable-next-line")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 让eqeqeq在template中的属性中生效")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view wx:if="{{ a === 1 }}"></view>')]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("wrapCoreRule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eqeqeq'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("applyDocument")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"isDef"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"isdef"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isdef"}},[t._v("#")]),t._v(" isDef")]),t._v(" "),s("blockquote",[s("p",[t._v("检查给定值是否已定义。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @template T\n * @param {T | null | undefined} v\n * @returns {v is T}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" isDef"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node 不为null就返回true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// isDef(null) => false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// isDef(undefined) = > true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// isDef({ node }) => true")]),t._v("\n\n")])])]),s("p",[s("a",{attrs:{id:"prevSibling"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"prevsibling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prevsibling"}},[t._v("#")]),t._v(" prevSibling")]),t._v(" "),s("blockquote",[s("p",[t._v("获取给定元素的前一个兄弟元素。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {VElement} node 获取上一个兄弟元素的元素节点。\n * @returns {VElement|null} 上一个兄弟元素。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prevSibling")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VElement"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <view>a</view><view>b</view>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prevSibling(node) 如果node为b，则返回a")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"hasAttribute"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"hasattribute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hasattribute"}},[t._v("#")]),t._v(" hasAttribute")]),t._v(" "),s("blockquote",[s("p",[t._v("检查给定的开始标签是否有特定的属性。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {VElement} node 要检查的开始标记节点。\n * @param {string} name 要检查的属性名称。\n * @param {string} [value] 要检查的属性值。\n * @returns {boolean} `true`代表开始标签具有属性。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view class="item"></view>')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'class'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"hasDirective"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"hasdirective"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hasdirective"}},[t._v("#")]),t._v(" hasDirective")]),t._v(" "),s("blockquote",[s("p",[t._v("检查给定的开始标签是否有特定的指令。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {VElement} node 要检查的开始标记节点。\n * @param {string} name 要检查的指令名称。\n * @param {string} [argument] 要检查的指令参数。\n * @returns {boolean} `true`代表开始标签具有指令。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasDirective")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" argument"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view wx:if="a"></view>')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasDirective")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"isEmptyValueDirective"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"isemptyvaluedirective"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isemptyvaluedirective"}},[t._v("#")]),t._v(" isEmptyValueDirective")]),t._v(" "),s("blockquote",[s("p",[t._v("检查给定的指令属性是否具有空值（"),s("code",[t._v('=""、="{{}}"')]),t._v("）。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n * @param {VDirective} node 要检查的指令属性节点。\n * @param {RuleContext} context 使用解析器服务的规则上下文。\n * @returns {boolean} `true` 代表指令属性的值为空（`=""`）。\n */')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmptyValueDirective")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VDirective"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("RuleContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmptyValueDirective")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// wx:if="" => true')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// wx:if="{{}}" => true')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// wx:if="{{a}}" => false')]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"isEmptyExpressionValueDirective"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"isemptyexpressionvaluedirective"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isemptyexpressionvaluedirective"}},[t._v("#")]),t._v(" isEmptyExpressionValueDirective")]),t._v(" "),s("blockquote",[s("p",[t._v("检查给定的指令属性是否有它们的空表达式值（例如"),s("code",[t._v('=""')]),t._v("）。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {VDirective} node 要检查的指令属性节点。\n * @param {RuleContext} context T使用解析器服务的规则上下文。\n * @returns {boolean} `true` 如果指令属性的表达式值为空。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmptyExpressionValueDirective")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VDirective"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("RuleContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isEmptyExpressionValueDirective")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// wx:if="" => true')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法待改进")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"getAttribute"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"getattribute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getattribute"}},[t._v("#")]),t._v(" getAttribute")]),t._v(" "),s("blockquote",[s("p",[t._v("获取具有给定名称的属性。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {VElement} node 要检查的开始标记节点。\n * @param {string} name 要检查的属性名称。\n * @param {string} [value] 要检查的属性值。\n * @returns {VAttribute | null} 找到的属性。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VAttribute"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view class="item"></view>')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'class'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" VAttribute\n")])])]),s("p",[s("a",{attrs:{id:"getDirective"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"getdirective"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getdirective"}},[t._v("#")]),t._v(" getDirective")]),t._v(" "),s("blockquote",[s("p",[t._v("获取具有给定名称的指令。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {VElement} node 要检查的开始标记节点。\n * @param {string} name 要检查的指令名称。\n * @param {string} [value] 要检查的指令值。\n * @returns {VAttribute | null} 找到的指令。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDirective")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VAttribute"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view wx:if="{{a}}">')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDirective")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" VAttribute\n")])])]),s("p",[s("a",{attrs:{id:"getDirectives"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"getdirectives"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getdirectives"}},[t._v("#")]),t._v(" getDirectives")]),t._v(" "),s("blockquote",[s("p",[t._v("获取具有给定名称的指令列表。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {VElement | VStartTag} node 要检查的开始标记节点。\n * @param {string} name 要检查的指令名称。\n * @returns {VDirective[]} 指令的数组。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDirectives")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VElement"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" VStartTag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VDirective"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view wx:if="{{a}}"><view wx:if="{{b}}"></view></view>')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDirectives")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'if'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回所有if的节点")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"prevElementHasIf"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"prevelementhasif"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prevelementhasif"}},[t._v("#")]),t._v(" prevElementHasIf")]),t._v(" "),s("blockquote",[s("p",[t._v("检查前一个兄弟元素是否有 "),s("code",[t._v("if")]),t._v(" 或 "),s("code",[t._v("elif")]),t._v(" 指令。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * @param {VElement} node 要检查的元素节点。\n   * @returns {boolean} 如果前一个兄弟元素有 `if` 或 `elif` 指令，则为 `true`。\n   */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prevElementHasIf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("VElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prevElementHasIf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <view></view> => false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view wx:if="{{a}}"></view> => false')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view wx:elif="{{b}}"></view> => true')]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"isCustomComponent"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"iscustomcomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iscustomcomponent"}},[t._v("#")]),t._v(" isCustomComponent")]),t._v(" "),s("blockquote",[s("p",[t._v("检查给定节点是否是自定义组件。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {VElement} node 要检查的开始标记节点。\n * @returns {boolean} `true` 如果节点是自定义组件。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isCustomComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isCustomComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <component is="a" /> => true')]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"isMpElementName"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"ismpelementname"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ismpelementname"}},[t._v("#")]),t._v(" isMpElementName")]),t._v(" "),s("blockquote",[s("p",[t._v("检查给定名称是否是小程序元素。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  * @param {string} name 要检查的名称。\n  * @returns {boolean} `true` 如果名称是小程序元素名称。\n  */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMpElementName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMpElementName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'view'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMpElementName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'iframe'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"getStaticPropertyName"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"getstaticpropertyname"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getstaticpropertyname"}},[t._v("#")]),t._v(" getStaticPropertyName")]),t._v(" "),s("blockquote",[s("p",[t._v("获取给定节点的属性名称。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {Property|AssignmentProperty|MethodDefinition|MemberExpression} node - 要获取的节点。\n * @return {string|null} 属性名称（如果是静态的）。 否则为空。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStaticPropertyName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Property"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("AssignmentProperty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("MethodDefinition"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("MemberExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getStaticPropertyName(node) => computed")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getStaticPropertyName(node) => foo")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"getStringLiteralValue"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"getstringliteralvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getstringliteralvalue"}},[t._v("#")]),t._v(" getStringLiteralValue")]),t._v(" "),s("blockquote",[s("p",[t._v("获取给定节点的字符串。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * @param {Literal|TemplateLiteral} node - 要获取的节点。\n   * @return {string|null} 如果是静态的，则为字符串。 否则为空。\n   */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStringLiteralValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Literal"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("TemplateLiteral")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getStringLiteralValue(node) true")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getStringLiteralValue(node) 1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getStringLiteralValue(node) 2")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"getComponentPropsFromOptions"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"getcomponentpropsfromoptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getcomponentpropsfromoptions"}},[t._v("#")]),t._v(" getComponentPropsFromOptions")]),t._v(" "),s("blockquote",[s("p",[t._v("通过查看所有组件的属性来获取所有道具")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {ObjectExpression} componentObject 具有组件定义的对象\n * @return {(ComponentArrayProp | ComponentObjectProp | ComponentUnknownProp)[]} 组件道具数组\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComponentPropsFromOptions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("componentObject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ComponentArrayProp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ComponentObjectProp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ComponentUnknownProp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("properties")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getComponentPropsFromOptions(node) => [propertiesNode...]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"getComputedProperties"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"getcomputedproperties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getcomputedproperties"}},[t._v("#")]),t._v(" getComputedProperties")]),t._v(" "),s("blockquote",[s("p",[t._v("通过查看所有组件的属性来获取所有计算属性")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {ObjectExpression} componentObject 具有组件定义的对象\n * @return {ComponentComputedProperty[]} 计算属性数组，格式为：[{key: String, value: ASTNode}]\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("componentObject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("ObjectExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ComponentComputedProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("computed")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// getComponentPropsFromOptions(node) => [fooNode]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"isMpxFile"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"ismpxfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ismpxfile"}},[t._v("#")]),t._v(" isMpxFile")]),t._v(" "),s("blockquote",[s("p",[t._v("检测文件是不是.mpx后缀的文件")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {string} path 文件路径\n * @return {boolean} 如果是mpx文件则为true否则为fasle\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMpxFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMpxFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/src/index.mpx'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMpxFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/src/index.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"compositingVisitors"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"compositingvisitors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compositingvisitors"}},[t._v("#")]),t._v(" compositingVisitors")]),t._v(" "),s("blockquote",[s("p",[t._v("合并Visitors")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @template T\n * @param {T} visitor\n * @param {...(TemplateListener | RuleListener | NodeListener)} visitors\n * @returns {T}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compositingVisitors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("visitor")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("visitors"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compositingVisitors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'VElement'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* doSomething */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'VElement'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* doSomething */")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"executeOnMpx"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"executeonmpx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#executeonmpx"}},[t._v("#")]),t._v(" executeOnMpx")]),t._v(" "),s("blockquote",[s("p",[t._v("检测当前文件是否是mpx文件且是创建mpx方法")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  * @param {RuleContext} context ESLint 规则上下文对象。\n  * @param { (node: ObjectExpression, type: MpxObjectType) => void } cb 回调函数\n  */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeOnMpx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RuleContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("cb")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectExpression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MpxObjectType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \n * createComponent({\n *  data: {},\n *  methods: {}  \n * }) \n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeOnMpx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" watchNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'methods'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("watchNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"excuteOnMpxCreateApp"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"excuteonmpxcreateapp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#excuteonmpxcreateapp"}},[t._v("#")]),t._v(" excuteOnMpxCreateApp")]),t._v(" "),s("blockquote",[s("p",[t._v("检测是否是在createApp函数并且执行callback")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  * @param {RuleContext} context ESLint 规则上下文对象。\n  * @param { (node: ObjectExpression, type: MpxObjectType) => void } cb 回调函数\n  */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("excuteOnMpxCreateApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RuleContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("cb")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectExpression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MpxObjectType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \n * createApp({\n *  onLaunch() {}\n * }) \n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("excuteOnMpxCreateApp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" onLanuchNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'onLaunch'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("onLanuchNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"excuteOnMpxCreateComponent"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"excuteonmpxcreatecomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#excuteonmpxcreatecomponent"}},[t._v("#")]),t._v(" excuteOnMpxCreateComponent")]),t._v(" "),s("blockquote",[s("p",[t._v("检测是否是在createComponent函数并且执行callback")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  * @param {RuleContext} context ESLint 规则上下文对象。\n  * @param { (node: ObjectExpression, type: MpxObjectType) => void } cb 回调函数\n  */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("excuteOnMpxCreateComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RuleContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("cb")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectExpression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MpxObjectType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \n * createComponent({\n *  properties:{}\n * }) \n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("excuteOnMpxCreateComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" propertiesNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'properties'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("propertiesNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"excuteOnMpxCreatePage"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"excuteonmpxcreatepage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#excuteonmpxcreatepage"}},[t._v("#")]),t._v(" excuteOnMpxCreatePage")]),t._v(" "),s("blockquote",[s("p",[t._v("检测是否是在createPage函数并且执行callback")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  * @param {RuleContext} context ESLint 规则上下文对象。\n  * @param { (node: ObjectExpression, type: MpxObjectType) => void } cb 回调函数\n  */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("excuteOnMpxCreatePage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RuleContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("cb")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectExpression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MpxObjectType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* \n * createPage({\n *  onPageScroll:{}\n * }) \n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("excuteOnMpxCreatePage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" onPageScrollNode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'onPageScroll'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("onPageScrollNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"getMpxObjectType"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"getmpxobjecttype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getmpxobjecttype"}},[t._v("#")]),t._v(" getMpxObjectType")]),t._v(" "),s("blockquote",[s("p",[t._v("如果是在创建mpx实例，则返回内部对象")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n  * @param {ObjectExpression} node 检测的节点\n  * @returns { MpxObjectType | null } Mpx定义的节点\n  */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMpxObjectType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectExpression")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MpxObjectType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @param {ObjectExpression} node */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ObjectExpression:exit'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMpxObjectType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'createComponent'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"defineMpxVisitor"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"definempxvisitor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#definempxvisitor"}},[t._v("#")]),t._v(" defineMpxVisitor")]),t._v(" "),s("blockquote",[s("p",[t._v("定义处理程序以遍历 Mpx 对象。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 定义处理程序以遍历 Mpx 对象。\n * Visitor可以定义一些特别的事件\n *\n * - `onMpxObjectEnter` ... 找到 Mpx 对象时的事件。\n * - `onMpxObjectExit` ... Mpx 对象访问结束时的事件。\n * - `onSetupFunctionEnter` ... 找到设置功能时的事件。\n * - `onRenderFunctionEnter` ... 找到渲染函数时的事件。\n *\n * @param {RuleContext} context ESLint 规则上下文对象。\n * @param {MpxVisitor} visitor 访问者遍历 Mpx 对象。\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineMpxVisitor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("RuleContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("visitor")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MpxVisitor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineMpxVisitor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onMpxObjectEnter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把所有computed里的属性收集起来")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" computedProperty "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getComputedProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      computedProperties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("computedProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"*iterateProperties"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"iterateproperties"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iterateproperties"}},[t._v("#")]),t._v(" *iterateProperties")]),t._v(" "),s("blockquote",[s("p",[t._v("具有所有属性的返回generator")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {ObjectExpression} node 检测的节点\n * @param {Set<GroupName>} groups 需要检测的属性\n * @returns {IterableIterator<ComponentPropertyData>}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterateProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("ObjectExpression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("groups")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Set"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("GroupName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("IterableIterator"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ComponentPropertyData"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeOnMpx")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" properties "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterateProperties")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'properties'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'computed'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" properties"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"executeOnFunctionsWithoutReturn"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"executeonfunctionswithoutreturn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#executeonfunctionswithoutreturn"}},[t._v("#")]),t._v(" executeOnFunctionsWithoutReturn")]),t._v(" "),s("blockquote",[s("p",[t._v("查找所有没有返回值的函数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {boolean} treatUndefinedAsUnspecified\n * @param { (node: ESNode) => void } cb 回调函数\n * @returns {RuleListener}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeOnFunctionsWithoutReturn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("treatUndefinedAsUnspecified"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("boolean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("cb")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ESNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("RuleListener\n")])])]),s("p",[t._v("example")]),t._v(" "),s("p",[t._v("参见"),s("a",{attrs:{href:"https://github.com/mpx-ecology/eslint-plugin-mpx/blob/master/lib/rules/return-in-computed-property.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("return-in-computed-property"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{id:"isSingleLine"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"issingleline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#issingleline"}},[t._v("#")]),t._v(" isSingleLine")]),t._v(" "),s("blockquote",[s("p",[t._v("检测是否在同一行")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {ASTNode} node\n * @returns {boolean}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSingleLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ASTNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSingleLine")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <view>a</view> <view>b</view> true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <view>a</view>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <view>b</view> false")]),t._v("\n\n")])])]),s("p",[s("a",{attrs:{id:"hasInvalidEOF"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"hasinvalideof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hasinvalideof"}},[t._v("#")]),t._v(" hasInvalidEOF")]),t._v(" "),s("blockquote",[s("p",[t._v("检查程序的templateBody是否有无效的EOF。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {ASTNode} node\n * @returns {boolean}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasInvalidEOF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ASTNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <template><view class="" true')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <template><view class=""></template> false')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasInvalidEOF")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),s("p",[s("a",{attrs:{id:"getMemberChaining"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"getmemberchaining"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getmemberchaining"}},[t._v("#")]),t._v(" getMemberChaining")]),t._v(" "),s("blockquote",[s("p",[t._v("获取 MemberExpression 的链接节点。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param  {ESNode} node 解析的节点\n * @return {[ESNode, ...MemberExpression[]]} 链接节点\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMemberChaining")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ESNode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ESNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("MemberExpression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMemberChaining")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const test = this.lorem['ipsum'].foo.bar` => [this, lorem, ipsum, foo, bar] 都为相应的节点")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"editDistance"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"editdistance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#editdistance"}},[t._v("#")]),t._v(" editDistance")]),t._v(" "),s("blockquote",[s("p",[t._v("返回两个字符串editdistance")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {string} a string a to compare\n * @param {string} b string b to compare\n * @returns {number}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("editDistance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("number\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对比两字符串差多少个字符")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("editDistance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'book'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'back'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("editDistance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'methods'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'metho'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("editDistance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'computed'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'comput'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n")])])]),s("p",[s("a",{attrs:{id:"isProperty"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"isproperty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isproperty"}},[t._v("#")]),t._v(" isProperty")]),t._v(" "),s("blockquote",[s("p",[t._v("检测节点是否为property节点")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {Property | SpreadElement} node\n * @returns {node is Property}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Property "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SpreadElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"isVElement"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"isvelement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isvelement"}},[t._v("#")]),t._v(" isVElement")]),t._v(" "),s("blockquote",[s("p",[t._v("检测节点是否为VElement节点")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {VElement | VExpressionContainer | VText} node\n * @returns {node is VElement}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isVElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" VElement "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" VExpressionContainer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" VText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view class="a"></view> 如果node是view => true 如果node是class => false')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isVElement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"findProperty"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"findproperty"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findproperty"}},[t._v("#")]),t._v(" findProperty")]),t._v(" "),s("blockquote",[s("p",[t._v("从给定的 ObjectExpression 节点中查找具有给定名称的属性。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {ObjectExpression} node\n * @param {string} name\n * @param { (p: Property) => boolean } [filter]\n * @returns { (Property) | null}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ObjectExpression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("p")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Property"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查找节点中的watch  过滤name=methods的节点")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'watch'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'methods'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"isThis"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"isthis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isthis"}},[t._v("#")]),t._v(" isThis")]),t._v(" "),s("blockquote",[s("p",[t._v("检查给定节点是 "),s("code",[t._v("this")]),t._v(" 还是存储 "),s("code",[t._v("this")]),t._v(" 的变量。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param  {ESNode} node 检测的节点\n * @param {RuleContext} context 规则上下文\n * @returns {boolean} 如果给的节点是this节点为true\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isThis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ESNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" RuleContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" that "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isThis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"findMutating"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"findmutating"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#findmutating"}},[t._v("#")]),t._v(" findMutating")]),t._v(" "),s("blockquote",[s("p",[t._v("检查给定节点是否有改变值的表达式")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {MemberExpression|Identifier} props\n * @returns { { kind: 'assignment' | 'update' | 'call' , node: ESNode, pathNodes: MemberExpression[] } | null }\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findMutating")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("props")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MemberExpression"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("Identifier")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'assignment'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'update'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'call'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("node")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ESNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("pathNodes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MemberExpression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// example")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findMutating")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this.x += 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this.x++")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this.x.push(1)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这种值发生改变的会被选中")]),t._v("\n")])])]),s("p",[s("a",{attrs:{id:"equalTokens"}}),t._v(" "),s("br")]),t._v(" "),s("h3",{attrs:{id:"equaltokens"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#equaltokens"}},[t._v("#")]),t._v(" equalTokens")]),t._v(" "),s("blockquote",[s("p",[t._v("检查两个给定节点的令牌是否相同。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {ASTNode} left 第一个节点\n * @param {ASTNode} right 第二个节点\n * @param {ParserServices.TokenStore | SourceCode} sourceCode 源码\n * @returns {boolean} 是否相等\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equalTokens")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ASTNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("right")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ASTNode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sourceCode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ParserServices"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TokenStore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" SourceCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" boolean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view wx:if="{{a}}">')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view wx:elif="{{b}}">')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// <view wx:elif="{{b}}">')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// equalTokens(anode, bnode, '<view wx:...') false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// equalTokens(bnode, bnode, '<view wx:...') true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("equalTokens")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sourceCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"使用-typescript-进行-jsdoc-类型检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-typescript-进行-jsdoc-类型检查"}},[t._v("#")]),t._v(" ✅ 使用 TypeScript 进行 JSDoc 类型检查")]),t._v(" "),s("p",[t._v("我们通过 TypeScript 和 JSDoc 启用了类型检查。\n执行类型检查的命令是："),s("code",[t._v("npm run tsc")])]),t._v(" "),s("p",[t._v("这只是为了帮助您编写规则，而不是进行严格的类型检查。 如果您发现难以解决类型检查警告，请随意使用 "),s("code",[t._v("// @ts-nocheck")]),t._v(" 和 "),s("code",[t._v("// @ts-ignore")]),t._v(" 注释来抑制警告。")])])}),[],!1,null,null,null);s.default=n.exports}}]);